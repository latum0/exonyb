generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
}

enum Permission {
  AGENT_DE_STOCK
  CONFIRMATEUR
  SAV
}

enum ClientStatut {
  ACTIVE
  BLACKLISTED
}

model Users {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  password      String
  name          String
  role          Role
  permissions   Json?
  phone         String   @unique
  refreshToken  String?
  emailVerified Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  historiques Historique[]
}

model Historique {
  idHistorique      Int      @id @default(autoincrement())
  dateModification  DateTime
  descriptionAction String
  acteur            String

  utilisateurId Int
  utilisateur   Users @relation(fields: [utilisateurId], references: [id])
}

model Client {
  idClient        Int          @id @default(autoincrement())
  nom             String
  prenom          String
  adresse         String
  email           String       @unique
  numeroTelephone String       @unique
  statut          ClientStatut @default(ACTIVE)

  commentaires Commentaire[]
  commandes    Commande[]
}

model Commentaire {
  id          Int      @id @default(autoincrement())
  contenu     String
  dateCreated DateTime @default(now())

  clientId Int
  client   Client @relation(fields: [clientId], references: [idClient])
}

model Commande {
  idCommande String @id @default(uuid())

  dateCommande     DateTime
  statut           String
  adresseLivraison String
  montantTotal     Float

  client   Client @relation(fields: [clientId], references: [idClient])
  clientId Int

  lignesCommande LigneCommande[]
  retour         Retour?
}

model LigneCommande {
  idLigne      Int   @id @default(autoincrement())
  quantite     Int
  prixUnitaire Float

  commande   Commande @relation(fields: [commandeId], references: [idCommande])
  commandeId String

  produit   Produit @relation(fields: [produitId], references: [idProduit])
  produitId String
}

model Produit {
  idProduit   String   @id @default(uuid())
  nom         String
  description String
  prix        Float
  stock       Int
  remise      Float
  marque      String
images      Json     
  categorie   String
  qrCode      String  @unique

  lignesCommande LigneCommande[]
  fournisseurs   Fournisseur[]   @relation("FournisseurProduit")
}


model Fournisseur {
  idFournisseur Int    @id @default(autoincrement())
  nom           String
  adresse       String
  contact       String
  telephone     String @unique
  email         String @unique

  produits Produit[] @relation("FournisseurProduit")
}

model Retour {
  idRetour     Int      @id @default(autoincrement())
  dateRetour   DateTime
  statutRetour String
  raisonRetour String

  commandeId String @unique

  commande Commande @relation(fields: [commandeId], references: [idCommande])
}
